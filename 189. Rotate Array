problem:Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 *******CODE*************
class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k = k % n; // Handle cases where k > n
        
        reverse(nums, 0, n - 1);   // Step 1: Reverse entire array
        reverse(nums, 0, k - 1);   // Step 2: Reverse first k elements
        reverse(nums, k, n - 1);   // Step 3: Reverse remaining elements
    }

    private void reverse(int[] nums, int left, int right) {
        while (left < right) {
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;
            left++;
            right--;
        }
    }
}






***************** Algorithm used **************************

Reversal Algorithm Explanation
The idea is to reverse parts of the array to achieve the desired rotation efficiently.

Steps:
1.Reverse the entire array: This moves the last 𝑘 elements to the front but in reverse order.

2.Reverse the first k elements: This corrects the order of the rotated elements.

Reverse the remaining n−k elements: This restores the original order of the remaining elements.


***************Explanation of Reversal Algorithm******************

1.Reverse the entire array
[1,2,3,4,5,6,7] → [7,6,5,4,3,2,1]

2.Reverse the first k elements (k=3)
[7,6,5,4,3,2,1] → [5,6,7,4,3,2,1]

3.Reverse the remaining (n-k) elements
[5,6,7,4,3,2,1] → [5,6,7,1,2,3,4]



*************Why is this Efficient?****************

Time Complexity: 𝑂(𝑛)
O(n) (We reverse the array 3 times, which is still linear time)
Space Complexity: 𝑂(1)
O(1) (No extra space, we modify in-place




Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
 

Constraints:

1 <= nums.length <= 105
-231 <= nums[i] <= 231 - 1
0 <= k <= 105
